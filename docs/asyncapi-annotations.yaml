asyncapi: "2.0.0"
info:
  title: "Application API"
  version: "0.1.0"
  contact:
    name: "Fancy Team"
    url: "https://greenhalos.lu"
    email: "asyncapi@greenhalos.lu"
servers:
  test:
    url: "http://rabbitmq"
    protocol: "amqp"
    description: "RabbitMQ Server"
channels:
  exchange/queries:
    subscribe:
      message:
        $ref: "#/components/messages/j.l.Void"
  exchange/routing.key:
    description: "Description explaining exactly what happens here"
    subscribe:
      message:
        $ref: "#/components/messages/l.g.j.a.e.p.ExamplePublisher$ExamplePublisherMessage"
    publish:
      message:
        $ref: "#/components/messages/l.g.j.a.e.l.ExampleListener$ExampleListenerMessage"
  exchange/routing.key.multiple1:
    subscribe:
      message:
        $ref: "#/components/messages/j.l.Void"
  exchange/routing.key.multiple2:
    subscribe:
      message:
        $ref: "#/components/messages/j.l.Void"
  routing.key.default.exchange:
    subscribe:
      message:
        $ref: "#/components/messages/j.l.Void"
components:
  schemas:
    j.l.Integer-decfea64:
      examples:
      - 42
      - 352
      type: "integer"
      format: "int32"
    j.l.String-931073f3:
      examples:
      - "EUR"
      - "USD"
      - "CHF"
      type: "string"
    j.l.Void:
      title: "Void"
      properties: {}
    j.m.BigDecimal-dbc8e12d:
      examples:
      - 42.42
      - 352.01
      type: "number"
      format: "float"
    l.g.j.a.e.l.ExampleListener$ExampleListenerMessage:
      title: "ExampleListenerMessage"
      properties:
        amount:
          $ref: "#/components/schemas/j.m.BigDecimal-dbc8e12d"
        currency:
          $ref: "#/components/schemas/j.l.String-931073f3"
        id:
          $ref: "#/components/schemas/l.g.j.a.e.l.ExampleListener$ObjectRepresentingAnId-3841a929"
    l.g.j.a.e.l.ExampleListener$ObjectRepresentingAnId-3841a929:
      description: "there can only be 2 valid values"
      examples:
      - "value1"
      - "value42"
      type: "string"
    l.g.j.a.e.p.ExamplePublisher$ExamplePublisherMessage:
      title: "ExamplePublisherMessage"
      properties:
        amount:
          $ref: "#/components/schemas/j.m.BigDecimal-dbc8e12d"
        currency:
          $ref: "#/components/schemas/j.l.Integer-decfea64"
  messages:
    j.l.Void:
      payload:
        $ref: "#/components/schemas/j.l.Void"
      title: "Void"
    l.g.j.a.e.l.ExampleListener$ExampleListenerMessage:
      payload:
        $ref: "#/components/schemas/l.g.j.a.e.l.ExampleListener$ExampleListenerMessage"
      title: "ExampleListenerMessage"
    l.g.j.a.e.p.ExamplePublisher$ExamplePublisherMessage:
      payload:
        $ref: "#/components/schemas/l.g.j.a.e.p.ExamplePublisher$ExamplePublisherMessage"
      title: "ExamplePublisherMessage"
      description: "this is a message which gets published"
